Соискатель: Надюков Михаил
Должность: разработчик Java
Срок исполнения: 16.03.2022
------------------------------------------------------------------------------------------------------------------------------------------------------------
Тестовое задание.
Существует клиент-серверное приложение с БД.
С БД может взаимодействовать только сервер.
Клиент с сервером должен взаимодействовать через Http.
В БД должна быть таблица договоров, содержащая дату, номер и дату последнего обновления.
Необходимо написать программу, которая отображала бы список договоров.
В таблице договоров должна быть колонка с признаком актуальности(CheckBox) (True если дата последнего обновления договора меньше текущей даты на 60 дней).
Клиент должен быть написан на JavaFx
------------------------------------------------------------------------------------------------------------------------------------------------------------
КРАТКОЕ ОПИСАНИЕ ПРИЛОЖЕНИЯ

Приложение имеет клиент-серверную архитектуру.
Приложение состоит из клиентской и серверной части.
Взаимодействие между клиентской и серверной частью осуществляется путем обмена текстовыми сообщениями по протоколу http.
Перед отправкой сообщения шифруются.
Зашифрованное сообщение преобразуется в Base64 строку и отправляется получателю.
Получатель выполняет преобразование полученного сообщения в обратном порядке, выделяя в конечном итоге целевое сообщение.
В клиентской и серверной частях реализована только та функциональность, которая необходима для выполнения тестового задания.
При этом используется только API, достаточный для решения тестового задания.

Порядок работы.
Пользователь задействует нужную команду (кликает по кнопке, выбирает строку таблицы и пр.).
Серверу отправляется соответствующее сообщение.
Сервер формирует пользовательское окно, которое может содержать какие-либо данные, команды и пр.
Данные пользовательского окна отправляются сервером клиенту.
На основе этих данных, клиент строит пользовательское окно.

-----------------------------

Клиентская часть.
Клиентская часть имеет микросервисную архитектуру.
Каждое сообщение, полученное от сервера, обрабатывается соответствующим классом-микросервисом.
Все классы-микросервисы должны находиться в пакете nadyukov.client.gui
Клиентская часть представляет собой графический интерфейс пользователя.
Все пользовательские окна (кроме главного окна) строятся классом-микросервисом client.gui.StageGUI на основе данных, полученных от сервера и описывающих окно.
Главное окно пользователя строится классом client.Prilojenie.
Клиентская часть написана с использованием JavaFX.
Клиентская часть приложения состоит из пакетов: mnadyukov.client, mnadyukov.client.gui, mnadyukov.utilities, mnadyukov.crypto.

Серверная часть.
Серверная часть имеет микросервисную архитектуру.
Каждое сообщение, полученное от клиента, обрабатывается соответствующим классом-микросервисом.
Каждое сообщение обрабатывается в отдельном потоке.
Все классы-микросервисы должны находиться в пакете mnadyukov.server.services.
Данные хранятся в базе данных.
В тестовом приложении используется СУБД Firebird.
Файл базы данных находится на сервере (файл mnadyukov/server/DB/TEST.FDB).
Корректная работа приложения возможна только при установленных на сервере СУБД Firebird и драйвера Jaybird.
Доступ к СУБД имеет только серверная часть приложения.
Обращения к базе данных выполняется отдельными классами.
Такие классы должны находиться в пакете mnadyukov.server.dbase.
Для выполнения своих задач классы-микросервисы используют такие классы.
Сами классы-микросервисы не должны напрямую обращаться к базе данных.
При изменении способа хранения данных, пакет mnadyukov.dbase должен быть заменен на соответствующий пакет.
Серверная часть приложения состоит из пакетов: mnadyukov.server, mnadyukov.server.services, mnadyukov.server.gui, mnadyukov.server.dbase, mnadyukov.crypto, mnadyukov.utilities.